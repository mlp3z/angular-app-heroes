{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/models/heroe.model.ts","webpack:///src/app/pages/heroe/heroe.component.ts","webpack:///src/app/pages/heroe/heroe.component.html","webpack:///src/app/pages/heroes/heroes.component.ts","webpack:///src/app/pages/heroes/heroes.component.html","webpack:///src/app/services/heroes.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ROUTES","path","component","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styles","AppModule","declarations","providers","bootstrap","NavbarComponent","HeroeModel","name","power","state","HeroeComponent","heroesService","activatedRoute","router","toastr","heroe","last","loading","starting","initPage","navigateByUrl","idParam","snapshot","paramMap","get","getHeroeByID","subscribe","resp","warning","timeOut","closeButton","extendedTimeOut","positionClass","form","invalid","hasModifications","messaje","createUpdateHeroe","success","deleteConfirm","value","deleting","deleteHeroe","clean","error","sendForm","HeroesComponent","loadHeroes","getHeroes","listHeroes","inndexLocal","splice","HeroesService","httpClient","urlFirebase","post","pipe","heroeTmp","put","updateHeroe","createHeroe","parseHeroesObjectToArray","heroesObj","heroesArray","Object","forEach","key","push","idHeroe","fire","text","icon","showConfirmButton","showCancelButton","providedIn","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HeroeComponent } from './pages/heroe/heroe.component';\nimport { HeroesComponent } from './pages/heroes/heroes.component';\n\nconst ROUTES: Routes = [\n    { path:'heroes', component: HeroesComponent},\n    { path:'heroe/:id', component: HeroeComponent},\n    {path:'**', pathMatch:'full', redirectTo:'heroes'}\n]\n\n@NgModule({\n  imports: [ \n      RouterModule.forRoot( ROUTES )\n   ],\n   exports: [\n       RouterModule\n   ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n    styles:[]\n})\nexport class AppComponent {\n  title = 'heroesApp';\n}\n","\n<!-- <i class=\"fa fa-spinner fa-spin fa-5x\"></i> -->\n\n<app-navbar></app-navbar>\n<div class=\"container mt-3\">\n    \n    <router-outlet></router-outlet>\n\n</div>\n\n\n\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { HeroeComponent } from './pages/heroe/heroe.component';\nimport { HeroesComponent } from './pages/heroes/heroes.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroeComponent,\n    HeroesComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n//   styleUrls: ['./navbar.component.css']\n    styles:[]\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <!-- <i class=\"fab fa-battle-net\"></i> -->\n    \n    <a class=\"navbar-brand\" href=\"/\">\n        <i class=\"fab fa-wolf-pack-battalion\"></i>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"[ '/heroes' ]\" routerLinkActive=\"active\"> Heroes </a>\n        </li>\n        <li class=\"nav-item\" >\n          <a class=\"nav-link\" [routerLink]=\"[ '/heroe/new' ]\" routerLinkActive=\"active\">Heroe</a>\n        </li>\n\n\n\n      </ul>\n    </div>\n</nav>\n  ","\r\nexport class HeroeModel {\r\n\r\n    id:string;\r\n    name:string;\r\n    power:string;\r\n    state:boolean;\r\n\r\n    constructor(){\r\n        this.id = null;\r\n        this.name = null;\r\n        this.power = null;\r\n        this.state = true;\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { HeroeModel } from 'src/app/models/heroe.model';\nimport { HeroesService } from 'src/app/services/heroes.service';\n\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-heroe',\n  templateUrl: './heroe.component.html',\n//   styleUrls: ['./heroe.component.css']\nstyles:[]\n})\nexport class HeroeComponent implements OnInit {\n\n    heroe = new HeroeModel();\n    last = new HeroeModel();\n    loading = false;\n    starting = false;\n\n    constructor(\n        private heroesService:HeroesService,\n        private activatedRoute:ActivatedRoute,\n        private router:Router,\n        private toastr: ToastrService\n    ) { \n\n        this.initPage();\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    clean(){\n        this.heroe = new HeroeModel();\n        this.last = new HeroeModel();\n        this.router.navigateByUrl('/heroe/new');\n    }\n\n    initPage() {\n\n        this.starting = true;\n        \n        const idParam = this.activatedRoute.snapshot.paramMap.get('id');\n\n        if( idParam !== 'new'){\n            \n            this.heroesService.getHeroeByID( idParam )\n                .subscribe( resp => {\n                    // console.log(resp)\n                    this.starting = false;\n\n                    if( resp.id ){\n                        \n                        this.heroe = resp;\n                        this.last = {\n                            ...this.heroe\n                        }\n\n                    }else{\n\n                        this.toastr.warning(\n                            `heroe with id ${ idParam } cannot be found`, \n                            \"Notification\",\n                            {\n                                // progressBar: true,\n                                timeOut: 0,\n                                closeButton: true,\n                                extendedTimeOut: 300,\n                                // positionClass: 'toast-bottom-left'\n                                positionClass: 'toast-bottom-full-width'\n                            }\n                        );\n\n                        // Swal.fire({\n                        //     title: 'alert',\n                        //     text: `heroe with id ${ idParam } cannot be found`,\n                        //     icon:'warning',\n                        //     allowOutsideClick: false\n                        // });\n\n                        this.router.navigateByUrl('/');\n                    }\n\n                } )\n\n        }else{\n            this.starting = false;\n        }\n\n    }\n\n    hasModifications(){\n        return this.last.id !== this.heroe.id\n            || this.last.name !== this.heroe.name\n            || this.last.power !== this.heroe.power\n            || this.last.state !== this.heroe.state;\n    }\n\n    sendForm(form : NgForm){\n\n        // form.valueChanges.subscribe( value => console.log(value));\n        // console.log(form.controls['state']);\n        // console.log(`dirty: ${form.dirty} - pristine: ${form.pristine}`);\n        // console.log(this.heroe);\n\n        // console.log('this.heroe',this.heroe)\n        // console.log('this.last',this.last)\n\n        if(form.invalid){\n\n            // console.log('form invalid')\n            return;\n\n        }else if( ! this.hasModifications() ){\n\n            // console.log('no modifications')\n            return;\n\n        }else{\n\n            // console.log('create or update data')\n            this.loading = true;\n\n            let messaje:string;\n            if(this.heroe.id){\n                messaje = 'updated'\n            }else{\n                messaje = 'created'\n            }\n\n            // Swal.fire({\n            //     title: 'wait',\n            //     text: 'sending data...',\n            //     icon:'info',\n            //     allowOutsideClick: false\n            // });\n            // Swal.showLoading();\n\n            this.heroesService.createUpdateHeroe(this.heroe)\n            .subscribe( resp => {\n\n                // console.log(resp);\n\n                //esto no es necesario xq como el objeto heroe es pasado por referencia\n                //cuando pase por el pipe se le cargara el id al mismo objeto que tenemos en este component\n                // this.heroe = resp; \n                this.loading = false;\n\n                this.last = {\n                    ...this.heroe\n                }\n                \n                // Swal.fire({\n                //     title: this.heroe.name,\n                //     text: `${messaje} successfully`,\n                //     icon:'success'\n                // });\n\n                // this.toastr.success(\n                //     `heroe ${ this.heroe.name } has been ${ messaje }`, \n                //     \"Notification\",\n                //     {\n                //         // progressBar: true,\n                //         // timeOut: 0,\n                //         closeButton: true,\n                //         extendedTimeOut: 300,\n                //         // positionClass: 'toast-bottom-left'\n                //         // positionClass: 'toast-bottom-full-width'\n                //         positionClass: 'toast-bottom-right'\n                //     }\n                // );\n\n                if(messaje==='created'){\n                    this.toastr.success(\n                        `heroe ${ this.heroe.name } has been created`, \n                        \"Notification\",\n                        {\n                            // progressBar: true,\n                            // timeOut: 0,\n                            closeButton: true,\n                            extendedTimeOut: 300,\n                            // positionClass: 'toast-bottom-left'\n                            // positionClass: 'toast-bottom-full-width'\n                            positionClass: 'toast-bottom-right'\n                        }\n                    );\n                }\n                else if(messaje==='updated'){\n                    this.toastr.warning(\n                        `heroe ${ this.heroe.name } has been updated`, \n                        \"Notification\",\n                        {\n                            // progressBar: true,\n                            // timeOut: 0,\n                            closeButton: true,\n                            extendedTimeOut: 300,\n                            // positionClass: 'toast-bottom-left'\n                            // positionClass: 'toast-bottom-full-width'\n                            positionClass: 'toast-bottom-right'\n                        }\n                    );\n                }\n\n            });\n\n            /*\n            //otra forma piola:\n            let request : Observable<any>\n            if(this.heroe.id){\n                request = this.heroesService.updateHeroe(this.heroe);\n            }else{\n                request = this.heroesService.createHeroe(this.heroe);\n            }\n            request.subscribe( resp => {\n                console.log(resp)\n                this.loading = false;\n            })\n            */\n\n        }\n\n    }\n\n    deleting:boolean;\n    deleteHeroe( heroe:HeroeModel ){\n\n        this.heroesService.deleteConfirm(heroe)\n            .then( resp => {\n\n                if(resp.value){\n                    this.deleting = true;\n\n                    this.heroesService.deleteHeroe(heroe.id)\n                        .subscribe( resp => {\n                            // console.log(resp)\n\n                            // this.router.navigateByUrl('/heroes')\n                            this.clean();\n                            this.deleting = false;\n\n                            this.toastr.error(\n                                `heroe ${ heroe.name } has been deleted`, \n                                \"Notification\",\n                                {\n                                    // progressBar: true,\n                                    // timeOut: 0,\n                                    closeButton: true,\n                                    extendedTimeOut: 300,\n                                    positionClass: 'toast-bottom-left'\n                                    // positionClass: 'toast-bottom-full-width'\n                                    // positionClass: 'toast-bottom-right'\n                                }\n                            );\n\n                        });\n\n                }\n            });\n    }\n\n\n}\n","\n<div class=\"animate__animated animate__pulse  text-center\">\n    <h1 *ngIf=\"starting\">\n        <i class=\"fa fa-sync fa-spin\"></i>\n    </h1>\n    <h1 *ngIf=\"!starting && heroe.id\">\n       <small> {{ heroe.name }} </small>\n    </h1>\n    <h1 *ngIf=\"!starting && !heroe.id\">\n        <small> Create a new Heroe </small>\n     </h1>\n</div>\n\n<hr>\n\n<div class=\"row text-center\">\n    <div class=\"col text-left\">\n        <button class=\"btn btn-secondary\"\n            routerLink=\"/heroes\"\n        >\n            <i class=\"fa fa-arrow-left\"></i>\n            back\n        </button>\n    </div>\n    <div class=\"col text-right\" *ngIf=\"!starting && heroe.id\">\n        <button class=\"btn btn-primary\"\n            (click)=\" clean() \" \n        >\n            <i class=\"fas fa-pen-nib\"></i>\n            new\n        </button>\n    </div>\n</div>\n\n<hr>\n\n<div class=\"row animate__animated animate__fadeIn\">\n    <div class=\"col\">\n\n        <form (ngSubmit)=\"sendForm( f )\" #f=\"ngForm\" >\n\n            <div class=\"form-group\">\n                <label> ID </label>\n                <input type=\"text\" class=\"form-control\" disabled=\"disabled\" placeholder=\"ID\"\n                    [(ngModel)]=\"heroe.id\" name=\"id\"\n                >\n                <small class=\"form-text text-muted\">this value is autogenerated</small>\n            </div>\n\n            <div class=\"form-group\">\n                <label> Name * </label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"name\" required\n                    [(ngModel)]=\"heroe.name\" name=\"name\" #txtName=\"ngModel\"\n                    [class.is-invalid]=\"txtName.invalid && txtName.touched\"\n                >\n                <small *ngIf=\"txtName.invalid && txtName.touched\" \n                    class=\"form-text text-danger animated fadeIn\">\n                    name is required\n                </small>\n            </div>\n\n            <div class=\"form-group\">\n                <label> Power </label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"power\"\n                    [(ngModel)]=\"heroe.power\" name=\"power\"\n                >\n            </div>\n\n            <div class=\"form-group\">\n\n                <label> State </label>\n\n                <!-- <input type=\"checkbox\" class=\"form-control\"\n                    [(ngModel)]=\"heroe.state\" name=\"state\" #state=\"ngModel\"\n                >{{ state.valid }} -->\n\n                <br>\n                <button type=\"button\" class=\"btn btn-outline-success w-100\"\n                    *ngIf=\"heroe.state\" (click)=\"heroe.state = false\"\n                >\n                    <i class=\"fa fa-smile-wink\"></i> \n                    lives\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-danger w-100\"\n                    *ngIf=\"!heroe.state\" (click)=\"heroe.state = true\"\n                >\n                    <i class=\"fa fa-dizzy\"></i> \n                    dead\n                </button>\n            </div>\n            \n            <hr>\n\n            <div class=\"form-group text-center\" *ngIf=\"!starting\">\n\n                <button class=\"btn btn-danger mr-3\"\n                    *ngIf=\"!starting && heroe.id\"\n                    (click)=\"deleteHeroe(heroe)\" \n                >\n                    <i *ngIf=\"!deleting\" class=\"fas fa-trash\"></i>\n                    <i *ngIf=\"deleting\" class=\"fas fa-sync fa-spin\"></i>\n                    {{ deleting ? 'deleting...' : 'delete' }}\n                </button>\n\n                <button type=\"submit\" class=\"btn btn-primary w-75 \" \n                    *ngIf=\"!loading \" \n                    [disabled]=\" !hasModifications() || !txtName.valid ? 'disabled' : null \"\n                    [ngClass]=\" hasModifications() ? 'btn-primary' : 'btn-light'\"\n                >\n                    <div *ngIf=\"heroe.id\" >\n                        <i class=\"far fa-edit\"></i>\n                        update\n                    </div>\n                    <div *ngIf=\"!heroe.id\">\n                        <i class=\"fa fa-save\"></i>\n                        create\n                    </div>\n                    <!-- {{ heroe.id ? 'update' : 'save' }} -->\n                </button>\n\n                <button type=\"button\" class=\"btn btn-primary w-75\" *ngIf=\"loading\" disabled>\n                    <i class=\"fa fa-sync fa-spin\"></i>\n                    {{ heroe.id ? 'updating...' : 'saving...' }}\n                </button>\n\n            </div>\n\n        </form>\n    </div>\n</div>\n\n<!-- \n<pre>\nheroe:\n{{ heroe | json}}\nlast:\n{{ last | json}}\n</pre>\n -->\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { HeroeModel } from 'src/app/models/heroe.model';\nimport { HeroesService } from 'src/app/services/heroes.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n//   styleUrls: ['./heroes.component.css']\nstyles:[]\n})\nexport class HeroesComponent implements OnInit {\n\n    listHeroes:HeroeModel[];\n    loading:boolean;\n\n    constructor(\n        private heroesService: HeroesService,\n        private toastr: ToastrService\n    ) { \n\n    }\n\n    ngOnInit(): void {\n\n        this.loadHeroes();\n        \n        // this.loading = true;\n        // setTimeout(() => {\n        //     this.loadHeroes();\n        // }, 2000);\n\n    }\n\n    loadHeroes(){\n        this.loading = true;\n\n        this.heroesService.getHeroes()\n            .subscribe( resp => {\n                // console.log(resp)\n                this.listHeroes = resp;\n                this.loading = false;\n            });\n    }\n\n    /*\n    deleteHeroe( heroe:HeroeModel , inndexLocal:number ){\n\n        Swal.fire({\n            title: heroe.name,\n            text: `Are you sure to delete this heroe ?`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        }).then( resp => {\n\n            if(resp.value){\n\n                this.heroesService.deleteHeroe(heroe.id)\n                    .subscribe( resp => {\n                        // console.log(resp)\n                    })\n    \n                this.listHeroes.splice(inndexLocal,1);\n            }\n\n        });\n    }\n    */\n   deleteHeroe( heroe:HeroeModel , inndexLocal:number ){\n\n        this.heroesService.deleteConfirm(heroe)\n            .then( resp => {\n\n                if(resp.value){\n                    \n                    this.heroesService.deleteHeroe(heroe.id)\n                        .subscribe( resp => {\n                            // console.log(resp)\n                            this.toastr.error(\n                                `heroe ${ heroe.name } has been deleted`, \n                                \"Notification\",\n                                {\n                                    // progressBar: true,\n                                    // timeOut: 0,\n                                    closeButton: true,\n                                    extendedTimeOut: 300,\n                                    positionClass: 'toast-bottom-left'\n                                    // positionClass: 'toast-bottom-full-width'\n                                    // positionClass: 'toast-bottom-right'\n                                }\n                            );\n                        });\n                    this.listHeroes.splice(inndexLocal,1);\n\n                }\n            });\n    }\n\n\n\n}\n","\n<h1 class=\"animate__animated animate__pulse text-center\">\n    <small> Heroe List </small>\n</h1>\n\n<hr>\n\n<div class=\"row\">\n    <div class=\"col text-right\">\n        <button class=\"btn btn-primary\"\n            routerLink=\"/heroe/new\"\n        >\n            <i class=\"fa fa-plus\"></i>\n            add\n        </button>\n    </div>\n</div>\n\n<hr>\n\n<table class=\"table table-hover mt-3 animate__animated animate__fadeIn\"\n    *ngIf=\"!loading && listHeroes.length>0\"\n>\n    <thead class=\"thead-dark\">\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Power</th>\n            <th scope=\"col\">State</th>\n            <th scope=\"col\" class=\"text-center\">Tools</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let heroe of listHeroes; index as i\">\n            <td> {{ (i+1) }} </td>\n            <td> {{ heroe.name }} </td>\n            <td> {{ heroe.power }} </td>\n            <td> \n                <label *ngIf=\"heroe.state\" class=\"badge badge-success\"> lives </label>\n                <label *ngIf=\"!heroe.state\" class=\"badge badge-danger\"> dead </label>\n            </td>\n            <td class=\"text-center\">\n                <button type=\"button\" class=\"btn btn-warning  mr-3 \"\n                    [routerLink]=\"[ '/heroe' , heroe.id ]\"\n                >\n                    <i class=\"fa fa-edit\"></i>\n                    edit\n                </button>\n                <button type=\"button\" class=\"btn btn-danger  \"\n                    (click)=\"deleteHeroe(heroe , i)\"\n                >\n                    <i class=\"fa fa-trash\"></i>\n                    delete\n                </button>\n            </td>\n        </tr>\n        <tr>\n    </tbody>\n</table>\n\n\n\n<div class=\"animate__animated animate__fadeIn animate__faster\"\n>\n\n    <div class=\"alert alert-info text-center mt-3  \" \n        *ngIf=\"loading\"\n    >\n        <h5 class=\"alert-heading\">loading...</h5>\n        <i class=\"fa fa-sync-alt fa-spin fa-2x\"></i>\n        <p class=\"mb-0\">\n            please wait\n        </p>\n    </div>\n    \n    <div class=\"alert alert-warning text-center mt-3 \" \n        *ngIf=\"!loading && listHeroes.length===0\"\n    >\n        <h5 class=\"alert-heading\">no records</h5>\n        <i class=\"fa fa-exclamation fa-2x\"></i>\n    </div>\n\n</div>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, delay } from 'rxjs/operators'\nimport Swal from 'sweetalert2';\n\nimport { HeroeModel } from '../models/heroe.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroesService {\n\n    private urlFirebase = 'https://angular-heroes-crud.firebaseio.com';\n\n    constructor(\n        private httpClient:HttpClient\n    ) { \n\n    }\n\n\n    createHeroe( heroe: HeroeModel){\n\n        return this.httpClient.post(`${this.urlFirebase}/heroes.json`, heroe )\n            //con el pipe manupulo la respuesta que vera quien se subscriba a este metodo\n            .pipe(\n                map( (resp:any) => {\n                    //aqui ya puedo tener el id que me retorna firebase\n                    //le cargo el id al objeto heroe y retorno ese objeto como respuesta\n                    //si no se realizara esta manipulacion la respuesta seria solo el id de firebase\n                    //pero de esta forma le llega el objeto completo al component que use este service\n                    heroe.id = resp.name \n                    return heroe;\n                })\n            );\n\n    }\n\n\n    updateHeroe( heroe: HeroeModel ){\n\n        //aqui no hay que enviar el id a firebase xq sino creara un campo con ese dato\n        //esto es para no usar el objeto que viene por referencia, asi podemos quitarle el id y enviarlo a firebase\n        const heroeTmp = {\n            ...heroe\n        }\n        delete heroeTmp.id; //aqui no puedo hacer: delete heroe.id, porque el heroe viene como referencia\n        //y si eliminamos su property id aqui tambien se va a eliminar en el componente que lo usa\n\n        return this.httpClient.put(`${this.urlFirebase}/heroes/${heroe.id}.json`, heroeTmp );\n\n    }\n\n\n    createUpdateHeroe( heroe: HeroeModel ){\n        if(heroe.id){\n            return this.updateHeroe( heroe );\n        }else{\n            return this.createHeroe( heroe );\n        }\n    }\n\n\n    getHeroes(){\n\n        return this.httpClient.get(`${this.urlFirebase}/heroes.json`)\n            .pipe( \n\n                // map( resp => {\n                //     return this.parseObjectToArray(resp)\n                // })\n\n                // map( resp => this.parseObjectToArray(resp))\n\n                map( this.parseHeroesObjectToArray ) //aqui con sintaxis resumida, \n                //el primer arg para la funcion va a ser el primer arg que retorna la funcion map\n\n                // ,delay(1000) //demora la respuesta\n            );\n    }\n\n    private parseHeroesObjectToArray(heroesObj:object){\n\n        // console.log(heroesObj);\n        if (heroesObj === null) { return []; }\n\n        let heroesArray : HeroeModel[] = [];\n        let heroe:HeroeModel;\n        Object.keys(heroesObj).forEach( key => {\n\n            // console.log(key, heroesObj[key]);\n            heroe = new HeroeModel()\n            heroe = {\n                id: key,\n                ...heroesObj[key]\n            }\n            // console.log(heroe);\n\n            heroesArray.push(heroe)\n        })\n\n\n        return heroesArray;\n    }\n\n\n    getHeroeByID(idHeroe:string){\n        return this.httpClient.get(`${this.urlFirebase}/heroes/${idHeroe}.json`)\n            .pipe(\n                map( (resp:any) => {\n                    // console.log(resp)\n\n                    let heroe = new HeroeModel();\n\n                    if( resp ){\n                        \n                        heroe = {\n                            id: idHeroe,\n                            ...resp\n                        }\n                        \n                    }\n                    // console.log(heroe);\n                    return heroe;\n                })\n            )\n    }\n\n\n    deleteHeroe(idHeroe:string){\n\n        return this.httpClient.delete(`${this.urlFirebase}/heroes/${idHeroe}.json`)\n\n    }\n\n    deleteConfirm( heroe:HeroeModel){\n        return Swal.fire({\n            title: heroe.name,\n            text: `Are you sure to delete this heroe ?`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        })\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}